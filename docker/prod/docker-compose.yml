services:
  node:
    image: syniol_node:22
    build:
      context: ../..
      dockerfile: docker/prod/node/Dockerfile
    container_name: nestjs_node
    restart: unless-stopped
    environment:
      PORT: 80
      POSTGRES_HOST: postgres
      POSTGRES_USER: root
      POSTGRES_PASSWORD: o1xn@96e?7IJ!aeSe-AA
      POSTGRES_DB: nestjs-postgres-db
    ports:
      - 80:80
    volumes:
      - ../../app:/var/local/app
    networks:
      - syniol_nestjs_oauth

  postgres:
    image: syniol_postgres:latest
    build:
      context: ../..
      dockerfile: docker/prod/postgres/Dockerfile
    container_name: nestjs_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: o1xn@96e?7IJ!aeSe-AA
      POSTGRES_DB: nestjs-postgres-db
    volumes:
      - postgres_data:/var/somewhere-where-data-are
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}'" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - syniol_nestjs_oauth

volumes:
  postgres_data:

networks:
  syniol_nestjs_oauth:
    driver: bridge
